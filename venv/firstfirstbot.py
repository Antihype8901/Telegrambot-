import datetime
import time
import sqlite3
import telebot
import random
from telebot import types

bot = telebot.TeleBot('5418327966:AAGxElFTKrdmp3xPZRtc7K2U_lM12k0aZ4w')

# –°—Ç–∏–∫–µ—Ä—ã –∏ –∏—Ö id
"""
–§–∏—Ç–Ω–µ—Å, –±–µ–≥ –∏ –ø—Ä–æ—á–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å -  CAACAgIAAxkBAAEFNfVixrAjLZEIpSK5IwNVMjvR4EE66gACEhIAAkyR6EqiNLr5NJAJyCkE
–¥–±–∂, –∫—É—à–∞—Ç—å -CAACAgIAAxkBAAEFNfFixq9_T2T676HQ6HgzrBEQ4HN4fQACgRAAAn-cEUhlrV6kjetHSikE
–¢–∞–Ω—Ü—ã - CAACAgIAAxkBAAEFNfNixq-mt_GdevueXAQDuh2vzOZrmQACmBcAAtIM6Es6Gdj5wk3wcykE
–î—É—à - CAACAgIAAxkBAAEFNexixq9pRCmSnYoS-p_v3BWks15wzAACeBcAAl5e6Uua4FtQMS7rZikE
–ü—Ä–∞–∑–¥–Ω–∏–∫ - CAACAgIAAxkBAAEFNfdixrA2b-9qgVtTcCI5ZeNOkH_ASwACwh MAAkFX6Epci86hwebrnSkE
–¢–µ–º–ø - CAACAgIAAxkBAAEFNf1ixrBvhirnTBs_qgl0fPDKKKQ8HgACVQUAAiMFDQAB-g1yS8IOivIpBA(–°–æ–±–∞–∫–∞ —Å –ø—É–∑—ã—Ä—ë–º –≤ –Ω–æ—Å—É)
CAACAgIAAxkBAAEFNf9ixrBwv8eu_-JvhI5S_5Jm02ZEcgACXgUAAiMFDQABtT6G57w5L4MpBA
"""

db=sqlite3.connect('telegbot.db')
sqlcurs=db.cursor()
sqlcurs.execute("""CREATE TABLE IF NOT EXISTS users( 
  id INT,
  Activitys  TEXT,
  TIME TEXT
)""")
db.commit()

bot = telebot.TeleBot('5418327966:AAGxElFTKrdmp3xPZRtc7K2U_lM12k0aZ4w')
# –§—É–Ω–∫—Ü–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –∫–æ–º–∞–Ω–¥—É /start
listwithhistory=[]
# Tuple —Å id —Å—Ç–∏–∫–µ—Ä–∞–º–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
tupleidwithhi=("CAACAgIAAxkBAAEFgsxi8jvdFzie2yebk6UtTpnl4t8VtgACNwADO2AkFJKJczNcKY76KQQ","CAACAgIAAxkBAAEFgspi8jvXwznpHZin12nhkFM1YIjA6gAC_AAD9wLID-JKwmellSruKQQ","CAACAgEAAxkBAAEFgshi8jvOfZFo8QABAWJyAzRKXIMmtusAAg8BAAI4DoIRtcxNf-IUkYIpBA"
               ,"CAACAgIAAxkBAAEFgsZi8jvHbwrlx3pS0ZBbAAH6FOnItF4AAp0AA-SgzgcAARSfeXjUPckpBA"
               ,"CAACAgIAAxkBAAEFgsRi8jvAXjqL6jwuzQbxYGpM74W5hgACxgEAAhZCawpKI9T0ydt5RykE"
               ,"CAACAgIAAxkBAAEFgsJi8ju4GdrrmyTmkN802kEfV9pyxQACHAAD9wLID3Acci1tkxh4KQQ"
               ,"CAACAgIAAxkBAAEFgsBi8juu06jbcQHe0BEE86JrGWCJMwACuQ0AAhRxwEvJIHUkgc_B3SkE"
               ,"CAACAgIAAxkBAAEFNeZixq7TKNMbZY6VHdndgHSvZM6RegACEhEAAj9w8Uo66W_N-9GmTykE")
#–ö–æ–≥–¥–∞ –Ω–∞—Å—Ç—É–ø–∞–µ—Ç –∫–æ–Ω–µ—Ü –∑–∞–ø–∏—Å–∏ –æ—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
endtuple=('–∫–æ–Ω–µ—Ü','rjytw','–∫–ª–Ω–µ—Ü','end','rjy','rjytw')
# –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –æ—Ç –±–æ—Ç–∞
zapis=('—Ç–∞–∫-—Ç–∞–∫','–Ø –∑–∞–ø–∏—Å—ã–≤–∞—é','–ù–∞–¥–µ—é—Å—å —ç—Ç–æ –≤—Å—ë)–Ø —à—É—á—É','–•–æ—Ä–æ—à–æ','–ó–∞–ø–∏—Å–∞–ª','–ü—Ä–∏–Ω—è–ª','–Ø –∑–∞–ø–æ–º–Ω–∏–ª','–¢–∞–∫-—Å','yes, sir','–û–≥–æ','–•–æ—Ä–æ—à–æ–µ –¥–µ–ª–æ','–î–∞ —É–∂–∂–∂–∂–∂','–í–æ—Ç —Ç–µ –Ω–∞','–ò–Ω—Ç–µ—Ä–µ—Å–Ω–µ–Ω—å–∫–æ','–ü—Ä–∏–∫–æ–ª—å–Ω–æ')
endzapis=('–ê —Ç—ã —Ö–æ—Ä–æ—à.','–í–æ—Ç —ç—Ç–æ –¥–∞!–ù–∞–ø–æ–ª–µ–æ–Ω–æ–≤—Å–∫–∏–µ –ø–ª–∞–Ω—ã —É —Ç–µ–±—è. –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!','–•–æ—Ä–æ—à–∏–π –ø–ª–∞–Ω!–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!','–£–¥–∞—á–∏ —Ç–µ–±–µ –≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏!','–ù–µ –≤–∞–∂–Ω–æ, –∫–∞–∫–æ–µ —É —Ç–µ–±—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.\n–°–¥–µ–ª–∞–π –ø–æ –º–∞–∫—Å–∏–º—É–º—É –∏–∑ —Ç–æ–≥–æ, —á—Ç–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª, –∏ —Ç—ã –±—É–¥–µ—à—å –≥–æ—Ä–¥–∏—Ç—å—Å—è —Å–æ–±–æ–π.','"–°–æ–∑–¥–∞–π —à–µ–¥–µ–≤—Ä –∏–∑ —Å–µ–≥–æ–¥–Ω—è".\n-–î–∂–æ–Ω –í—É–¥–µ–Ω.\n','–ë–¥–µ—Å—Ç—è—â–∏–π —É —Ç–µ–±—è –ø–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å!\n–°–¥–µ–ª–∞–π –µ–≥–æ –ø–æ –∫—Ä–∞—Å–æ—Ç–µ.')
# TODO –¥–æ–±–∞–≤–∏—Ç—å, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–µ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –≤—ã–≤–æ–¥–∏–ª–∏—Å—å –µ—â—ë –∏ —Å—Ç–∏–∫–µ—Ä—ã —Å –æ—Ç–¥—ã—Ö–æ–º
# –¢–æ –µ—Å—Ç—å 1) –î–æ–ø–∏—Å—ã–≤–∞–µ–º tuple, 2)–ü—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º –ª–æ–≥–∏–∫—É –≤—ã–∑–æ–≤–∞ —ç—Ç–æ–≥–æ —Ç–∞–ø–ª–∞, 3) –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–≤–æ–¥ —Å—Ç–∏–∫–µ—Ä–æ–≤.
# –ü–û–°–õ–ï –°–¥–µ–ª–∞—Ç—å —Ç–∞–ø–ª —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–∫–µ—Ä–∞–º–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
# –ü—Ä–æ–ø–∏—Å–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å–≤–∏–µ. (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç —ç—Ç–æ –≤–∏–¥–µ—Ç—å, –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –∑–∞—Ö–æ–¥–∏—Ç –∑–∞–ø–∏—Å–∞—Ç—å –Ω–æ–≤—ã–µ –¥–µ–ª–∞.)
# Todo: –¥–æ–¥–µ–ª–∞—Ç—å -->–º–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–∞–Ω–¥—É –∫–æ–Ω–µ—Ü, —á—Ç–æ–±—ã –æ–Ω –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –ø—Ä–µ—Ä—ã–≤–∞–ª —Ä–∞–±–æ—Ç—É
vacationrest=('–•–æ—Ä–æ—à–æ, –∫–æ–Ω–µ—á–Ω–æ, —á—Ç–æ —Ç—ã —Ç–∞–∫ –º–Ω–æ–≥–æ –Ω–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª —Å–µ–±–µ. –ù–æ –ø—Ä–æ –æ—Ç–¥—ã—Ö-—Ç–æ –Ω–µ –∑–∞–±—ã–≤–∞–π.)')
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫—É
def checkstr(string):
    return isinstance(string,str)

@bot.message_handler(commands=["start"])
def start(m):
    bot.send_message(m.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {m.chat.first_name} {m.chat.last_name}.\n')
    bot.send_message(m.chat.id, '–Ø –±–æ—Ç-–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫, –µ—Å–ª–∏ —Ç—ã –≤–¥—Ä—É–≥ –∑–∞–±—ã–ª(–∞).\n–ú–æ–∂–µ—à—å –∑–∞–ø–∏—Å–∞—Ç—å –≤ –º–µ–Ω—è —Å–ø–∏—Å–æ–∫ —Å–≤–æ–∏—Ö –¥–µ–ª.')
    bot.send_sticker(m.chat.id, tupleidwithhi[random.randint(0,len(tupleidwithhi))])

    menumain=types.ReplyKeyboardMarkup(row_width=2)
    itemmaintoday=types.KeyboardButton('–°–µ–≥–æ–¥–Ω—è üìñ')
    itemmaintommorow=types.KeyboardButton('–ó–∞–≤—Ç—Ä–∞ üïò')
    menumain.add(itemmaintoday, itemmaintommorow)
    temm=bot.send_message(m.chat.id,"–í—ã–±–µ—Ä–∏, –Ω–∞ –∫–∞–∫–æ–π –∏–∑ –¥–Ω–µ–π, —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–µ–ª–∞.",reply_markup=menumain)

#–§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–µ–ª
@bot.message_handler(commands=["changelist"])
def changelistuser(m):
    pass

#–§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –ª–∏—Å—Ç–∞
@bot.message_handler(commands=["printlist"])
def printlistuser(m):
    pass

@bot.message_handler(commands=["del"])
def deletelist(m):
    tempdel=None
    if len(listwithhistory)==0:
        bot.send_message(m.chat.id,"–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π, –ø–æ—ç—Ç–æ–º—É –≤–∞–º –Ω–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å.\n–ú–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–∏ –∑–∞–ø–∏—Å–∏ –≤—ã–±—Ä–∞–≤ –≤ –º–µ–Ω—é –∫–æ–º–º–∞–Ω–¥—É /start")
    else:
        menudel = types.ReplyKeyboardMarkup(row_width=2)
        itemmadelall = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏.')
        itemmadelnumber = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –ø–æ –Ω–æ–º–µ—Ä—É.')
        menudel.add(itemmadelall, itemmadelnumber)
        tempdel = bot.send_message(m.chat.id, "–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å.", reply_markup=menudel)
    delete_handler_list(m)

def delete_handler_list(m):
    if m.text=="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏.":
        listwithhistory=[]
        bot.send_message(m.chat.id,'–í–∞—à —Å–ø–∏—Å–æ–∫ –¥–µ–ª –æ—á–∏—â–µ–Ω!')
    elif m.text=="–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –ø–æ –Ω–æ–º–µ—Ä—É.":
        numberdel=bot.send_message(m.chat.id,"–ù–∞–ø–∏—à–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –Ω–æ–º–µ—Ä–∞, —Ç–µ—Ö –¥–µ–ª, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å.")
        bot.register_next_step_handler(numberdel,userdeletenumber())
        bot.send_message(m.chat.id,'–î–µ–ª–∞ –ø–æ–¥ –Ω–æ–º–µ—Ä–∞–º–∏ ')
    elif m.text=="/start":
        start(m)

@bot.message_handler()
def user_message(message):
    if checkstr(message.text):
        if message.text=="/start":
            start(message)
        if message.text=="–°–µ–≥–æ–¥–Ω—è üìñ" or message.text=="–ó–∞–≤—Ç—Ä–∞ üïò":
            listwithhistory.append(message.text)
            # –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç
            a = telebot.types.ReplyKeyboardRemove()
            mes = bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏ –ø–æ—Å—Ç—Ä–æ—á–Ω–æ —Å–ø–∏—Å–æ–∫ –¥–µ–ª (–æ–¥–Ω–æ –¥–µ–ª–æ = –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞):", reply_markup=a)
        else:
            mes=bot.send_message(message.chat.id,zapis[random.randrange(len(zapis))])
        if  not(message.text.lower() in endtuple):
            bot.register_next_step_handler(mes,userobrab)
    else:
        bot.send_message(message.chat.id,"–û—à–∏–±–∫–∞ –≤ –≤–µ–¥—ë–Ω–Ω–æ–π –≤–∞–º–∏ —Å—Ç—Ä–æ–∫–µ!\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ —Å—Ç—Ä–æ–∫—É.")

# –ó–¥–µ—Å—å –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ list--TODO –ü–µ—Ä–µ–¥–µ–ª–∞—Ç—å –≤ –±–¥
def userobrab(mesg):
    if checkstr(message.text):
        if not(mesg.text.lower() in endtuple):
            listwithhistory.append(mesg.text)
            user_message(mesg)
        else:
            bot.send_message(mesg.chat.id, '–ü—Ä–∏–Ω—è—Ç–æ.\n–ó–∞–ø–∏—Å—å –æ–∫–æ–Ω—á–µ–Ω–∞!')
            printhistory(mesg)
    else:
        bot.send_message(mesg.chat.id, '–û—à–∏–±–∫–∞! –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ —Å—Ç—Ä–æ–∫—É.')

def printhistory(re):
    if listwithhistory[0]=="–°–µ–≥–æ–¥–Ω—è üìñ":
        bot.send_message(re.chat.id,'–°–ø–∏—Å–æ–∫ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏—Ö –¥–µ–ª:')
    else:
        bot.send_message(re.chat.id,'–í–∞—à–∏ –¥–µ–ª–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞:')
    # –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, + –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä–∞ –∫ –∫–∞–∂–¥–æ–º—É –¥–µ–ª—É
    textmain=''
    for el in range(1,len(listwithhistory)):
        textmain+=f"{el})"+listwithhistory[el]+'\n'
    if len(listwithhistory)!=0:
        bot.send_message(re.chat.id,f" {textmain}")
        bot.send_sticker(re.chat.id, 'CAACAgIAAxkBAAEFRrVi0DdErwLlhVDmuUeTdGT-Ld0khQAC2w8AAjs_SUvTm6YwUBI-OCkE')
    else:
        bot.send_message(re.chat.id, "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –¥–µ–ª –ø–æ–∫–∞ –ø—É—Å—Ç!")
#     markup = types.InlineKeyboardMarkup()
#     button1 = types.InlineKeyboardButton("–°–∞–π—Ç –•–∞–±—Ä",tempfunck(re))
#     markup.add(button1)
#     bot.send_message(re.chat.id,"–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç)".format(re.from_user),reply_markup=markup)
#
# # –¢–µ–º–ø–æ–≤—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –∏–º–µ–µ—Ç –Ω–∏ –∫–∞–∫–æ–π –ª–æ–≥–∏–∫–∏ –ø–æ–∫–∞ —á—Ç–æ
# def tempfunck(m):
#     bot.send_message(m.chat.id,"–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ç–µ–º–ø–æ–≤—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    bot.polling(none_stop=True)